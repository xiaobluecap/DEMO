http协议：
		应用层：文件传输，文件服务，虚拟终端，收发邮件   http协议，dns服务
		表示层：数据加密，数据格式化，代码转换
		会话层：解除或建立与其他接点的联系
		传输层：提供端对端的接口						tcp，udp
		网络层：为数据包选择路由						ip  icmp   arp
		数据链路层：在物理层的基础上传输帧（带有地址），错误检测功能			wifi
		物理层：提供网络的物理连接
		
http请求：
		应用层将数据交给传输层，
		传输层将收到的数据进行分割打上标记序号和端口号后将数据交给网络层
		网络层增加通信目的地的MAC地址后将数据交给链路层
		链路层将其发出去
		  
与http协议关系密切的协议：
		ip协议：位于网络层，负责数据包的投递，主要依靠ip，MAC以及ARP协议
		tcp协议：提供可靠的字节流，主要用于分割数据，并确保数据投递的目的地。
		dns服务：位于应用层，提供域名到ip地址的解析服务
		
http协议的特点：
		简单快速：客户向服务器请求服务时，只需传送请求方法和路径，htpp协议简单，使得http服务器的程序规模小因而通信速度很快
		灵活：http允许传输任意类型的数据对象。
		无连接：限制每一次连接只处理一个请求，处理完请求就断开连接
		无状态：对事物的处理没有记忆。每次刷新需要登录页面的网页都需要重新登录
		
	GET：获取资源。请求参数附在地址栏后面，可见的
	HEAD：获得报文部首。和GET类似，但是服务器不返回报文主体
	POST：向服务器提交数据，表单
	DELETE：用于请求删除所请求url标识的资源
	
	
htpp协议的格式：
	
	请求：
		请求方法 协议及版本号            	GET /HTTP/1.1    
		请求的主机地址					 	Host:www.baidu.com
		请求部首字段					 	报文
		（空行）
		请求参数						 	name=xx&age=22(参数)

	响应：	
		协议版本 状态码 状态码原因短语		HTTP/1.1 200 OK	
		响应部首字段						响应报文
		（空行）							
		响应主体							<html> ... </html>
											
Cookie技术：
		服务器识别客户身份而存储在用户本地终端上的数据
	过程：
		第一次请求：客户端向服务器发起请求，服务器生成cookie用于记住客户端，
					将cookie在响应当中返回给客户端，客户端保存该cookie
		第二次及以后请求：客户端在请求上主动加上cookie，服务器根据该cookie就可以判断客户端的身份
					
http报文内的http信息：
		用于http协议交互的信息被称为http报文，客户端的http报文是请求报文
		服务器的http报文叫做响应报文，http报文是由多行数据构成的字符串文本
		（\r\n 表示换行），报文部首（必须要有），报文主体（不一定要有）
		
	报文主体和实体主体：
		报文实体：
			实体首部：描述http报文的内容
			实体主体：原始数据
			
http结构：
	一个完整的http报文结构：
		1.（http）报文首部
		2.空行（CR+LF）
		3.（http）报文主体：
			请求报文：									响应报文：
					请求行										响应行
					首部行										首部行
					空行										空行
					实体主体：原始数据							实体主体：原始数据
		  
	http首部字段：
			传递额外重要信息，给浏览器和服务器提供报文主体大小，所使用的语言，认证信息等内容
		  
		通用首部：请求和响应报文都会使用的首部
		请求首部：客服端使用的首部，补充请求的附加信息
		响应首部：服务器使用的首部，补充响应的附加信息
		实体首部：针对报文实体使用的首部，补充资源内容更新等于实体有关信息
		
		
csrf攻击：
		CSRF（跨站域请求伪造）攻击者盗用你的身份，以你的名义发送恶意请求
	
	流程：
		1.浏览并登陆信任网站A，
		2.验证通过，在用户处产生A的cookie
		3。在没有登出A网站的情况下，访问危险网站B
		4.B要求访问第三方站点A，发出一个请求
		5.根据B在4的请求，浏览器带着2出产生的cookie访问A
		
https：基于ssl的http协议  与http使用不同的端口  更安全
	ssl：安全套接字协议是web浏览器与web服务器之间安全交换信息的协议
	ssl的特征：
		1.保密：在握手协议中定义了会话秘钥后，所有的消息都被加密
		2.鉴别：可选的客户端认证，和强制性的服务器认证
		3.完整性：传送的消息包括消息完整性检查（使用MAC）
	
	提供了身份验证与加密通道方法，被广泛用于互联网安全敏感的通信
	
	http协议传输的数据都是未加密的，也就是明文的，因此使用http协议传输隐私信息非常不安全
	
https的使用：
		1.客户端请求http连接，客服端将自己支持的一套加密规格发送给服务器
		2.服务器返回证书公钥以及从中选取的一套加密算法和HASH算法
		3.客服端接收数据，验证证书，通过后随机生成秘钥，使用约定好的HASH计算握手消息
		4.使用公钥对秘钥进行加密并将之前的所有信息一起发送给服务器
		5.服务器接收客服端发来的消息，使用私钥将密码解析出来，用密码解析发来的消息，
		  并验证HASH是否一致，并加密一段握手消息发送给客服端
		6.客服端接收消息并解密后验证HASH是否一致，一致变完成握手，接下来的消息都需要加密在发送
		
htpp与https的区别：
		1.端口不同，80,443
		2.https需要使用ca证书
		3.http是明文传输，https是ssl加密传输
		
get请求与post请求的区别：
		1.post修改资源，get是获取资源
		2.get可以用于保存收藏连接地址
		3.post请求可以把请求的内容放在报文里
		  
		  
		  
		  
		  
		  
		  